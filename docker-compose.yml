version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - AI_SERVICE_URL=http://ai-service:8001
      - AI_SERVICE_API_KEY=${AI_SERVICE_API_KEY}
    depends_on:
      - db
      - redis
      - ai-service
    volumes:
      - ./backend:/app
    networks:
      - 8thdegree-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_AI_SERVICE_URL=http://localhost:8001
    volumes:
      - ./frontend:/app
    networks:
      - 8thdegree-network

  ai-service:
    build:
      context: ./ai
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379/1
      - MODEL_CACHE_TTL=3600
      - LOG_LEVEL=DEBUG
    depends_on:
      - redis
    volumes:
      - ./ai:/app
    networks:
      - 8thdegree-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - 8thdegree-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - 8thdegree-network

volumes:
  postgres_data:
  redis_data:

networks:
  8thdegree-network:
    driver: bridge 