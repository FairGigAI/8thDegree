name: 8thDegree CI

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
    - uses: actions/checkout@v4

    - name: Run Backend Unit Tests
      run: poetry run pytest tests/

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
    - uses: actions/checkout@v4

    - name: Run Frontend Tests
      run: npm test

  full-integration-test:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    env:
      APP_ENV: "test"
      DATABASE_URL: ${{ secrets.AWS_DB_URL }}
      REDIS_URL: ${{ secrets.AWS_REDIS_URL }}
      BACKEND_API_URL: ${{ secrets.AWS_BACKEND_URL }}
      FRONTEND_URL: ${{ secrets.AWS_FRONTEND_URL }}
      OAUTH_CLIENT_ID: ${{ secrets.AWS_OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.AWS_OAUTH_CLIENT_SECRET }}
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v4

    - name: Start Backend & Frontend
      run: |
        docker-compose up -d backend frontend
        sleep 10

    - name: Test API Connection
      run: |
        curl -s $BACKEND_API_URL/health || exit 1
        curl -s $FRONTEND_URL/ || exit 1

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Snyk Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --all-projects
